# Load necessary library
library(dplyr)

# Define the folder paths
parent_folder <- "/Users/jpmcginnis1/Desktop/Sequencing info and data/RStudio_work/organotypic culture paper"
folder_paths <- list(
  file.path(parent_folder, "1-29-24 cell type DEGs"),
  file.path(parent_folder, "5-6-24 cell type DEGs"),
  file.path(parent_folder, "6-20-24 STL cell type DEGs"),
  file.path(parent_folder, "2-19-24 STL cell type DEGs"),
  file.path(parent_folder, "5-15-24 STL cell type DEGs"),
  file.path(parent_folder, "5-13-24 STL cell type DEGs")
)

# Define the combinations of cell types and regulation statuses
combinations <- list(
  c("Excitatory neurons", "downregulated"),
  c("Inhibitory neurons", "upregulated"),
  c("Inhibitory neurons", "downregulated"),
  c("Fibroblasts", "upregulated"),
  c("Fibroblasts", "downregulated"),
  c("Oligodendrocytes", "upregulated"),
  c("Oligodendrocytes", "downregulated"),
  c("Myeloid", "upregulated"),
  c("Myeloid", "downregulated"),
  c("GBM tumor cells", "upregulated"),
  c("GBM tumor cells", "downregulated"),
  c("Pericytes", "upregulated"),
  c("Pericytes", "downregulated")
)

# Function to process files for a specific cell type and regulation status
process_cell_type <- function(cell_type, regulation) {
  # Initialize vectors to store gene names and corresponding folder names
  all_genes <- c()
  all_folders <- c()
  
  # Define the search pattern
  search_pattern <- paste0("(?i)", cell_type, " ", regulation, ".*\\.csv$")
  
  # Loop through each folder
  for (folder_path in folder_paths) {
    # Extract the terminal folder name
    terminal_folder <- basename(folder_path)
    
    # List all files matching the search pattern
    files <- list.files(folder_path, pattern = search_pattern, full.names = TRUE)
    
    # Loop through each file
    for (file in files) {
      # Read the file
      df <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
      
      # Ensure the "FeatureName" column exists
      if ("FeatureName" %in% colnames(df)) {
        # Add the FeatureName values and the folder name to the vectors
        all_genes <- c(all_genes, df$FeatureName)
        all_folders <- c(all_folders, rep(terminal_folder, length(df$FeatureName)))
      }
    }
  }
  
  # Create a data frame with all genes and their folder appearances
  gene_folder_df <- data.frame(FeatureName = all_genes, Folder = all_folders)
  
  # Count the occurrences of each gene
  gene_counts <- gene_folder_df %>%
    group_by(FeatureName) %>%
    summarise(
      Count = n(), # Total occurrences
      Folders = paste(unique(Folder), collapse = ";") # Unique folder list
    ) %>%
    arrange(desc(Count)) # Sort by Count in descending order
  
  # Save the results to a CSV
  output_file <- file.path(parent_folder, paste0(cell_type, "_", regulation, "_FeatureName_counts_with_folders.csv"))
  write.csv(gene_counts, output_file, row.names = FALSE)
  cat("Gene counts saved for", cell_type, regulation, "to:", output_file, "\n")
}

# Loop through all combinations
for (combo in combinations) {
  process_cell_type(combo[[1]], combo[[2]])
}

cat("Processing completed for all cell types and regulation statuses.\n")
